{
  "version": "0.0.2",
  "private": true,
  "workspaces": [
    "cx-portal",
    "cx-portal-shared-components"
  ],
  "config": {
    "image": "ghcr.io/catenax-ng/product-portal-frontend"
  },
  "scripts": {
    "prepare": "husky install",
    "clean": "cd cx-portal-shared-components && yarn clean && cd ../cx-portal && yarn clean",
    "release": "yarn version --patch && git push --tags",
    "lint": "eslint cx-portal cx-portal-shared-components",
    "pretty": "prettier --write \"./cx-portal*/src/**/*.{ts,tsx,js,jsx,json,css,sass,scss,xml,md}\"",
    "test:ci": "cd cx-portal && yarn test:ci",
    "build:lib": "cd cx-portal-shared-components && yarn build:lib",
    "build:storybook": "cd cx-portal-shared-components && yarn build:storybook",
    "start:storybook": "cd cx-portal-shared-components && yarn start",
    "build:portal": "cd cx-portal && yarn build",
    "start:portal": "cd cx-portal && yarn start",
    "build:licenses": "find node_modules -name package.json -exec jq -r '.|\"\\(.name),\\(.version),\\(.license)\"' {} \\; | sort | uniq > cx-portal/public/third-party-licenses.txt",
    "build:docker": "if [ -d \"./cx-portal/build\" ]; then yarn build:docker:prebuilt; else yarn build:docker:full; fi",
    "build:docker:full": "IMAGE=$npm_package_config_image && docker build -t $IMAGE -f .conf/Dockerfile.full --build-arg \"http_proxy=${http_proxy}\" --build-arg \"https_proxy=${https_proxy}\" --build-arg \"no_proxy=${no_proxy}\" .",
    "build:docker:prebuilt": "IMAGE=$npm_package_config_image && docker build -t $IMAGE -f .conf/Dockerfile.prebuilt . && docker tag $IMAGE:latest $IMAGE:$npm_package_version",
    "start:docker": "IMAGE=$npm_package_config_image  && docker run --rm -d -p 3000:8080 --name cx-portal $IMAGE",
    "publish:docker": "IMAGE=$npm_package_config_image && docker tag $IMAGE:latest $IMAGE:$npm_package_version && docker push $IMAGE:$npm_package_version && docker push $IMAGE:latest",
    "publish:docker:dev003": "IMAGE=$npm_package_config_image && IMAGE_DEV003=catenaxacr.azurecr.io/frontend/portal && docker tag $IMAGE:latest $IMAGE_DEV003:latest && docker tag $IMAGE:latest $IMAGE_DEV003:$npm_package_version && docker push $IMAGE_DEV003:$npm_package_version && docker push $IMAGE_DEV003:latest",
    "build": "yarn clean && yarn build:licenses && yarn build:lib && yarn build:storybook && yarn build:portal",
    "start": "yarn start:portal",
    "deploy:helm:dev003": "helm install -f .chart/values.dev003.yaml portal .chart/portal --namespace portal",
    "undeploy:helm:dev003": "helm uninstall portal --namespace portal"
  },
  "lint:staged": {
    "**/src/**/*.{js,jsx,ts,tsx}": [
      "yarn test:ci"
    ]
  },
  "devDependencies": {
    "husky": "^7.0.4",
    "yarn": "^1.22.18"
  }
}
